name: CMake

on: [push, pull_request]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Install Utilities
      shell: bash
      run: sudo apt-get update && sudo apt-get install -y lcov valgrind
    - name: Install bats-core
      shell: bash
      run: sudo npm i --global bats
    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
    - name: Collect base coverage
      id: collcov
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: lcov --capture -i --directory ./CMakeFiles/parc24cov.dir --directory ./CMakeFiles/42shcov.dir -o cov-base.info
    - name: Unit Test
      id: testu
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE -T memcheck --overwrite MemoryCheckCommandOptions="--leak-check=full --error-exitcode=100" --output-on-failure --timeout 120
    - name: On Unit Test Failure report memcheck logs
      if: ${{ failure() && steps.testu.outcome == 'failure' }}
      uses: actions/upload-artifact@v2
      with:
        name: memcheck-logs
        path: ${{runner.workspace}}/build/Testing/**/MemoryChecker.*.log
    - name: Integration Test
      id: testi
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: bats -v; bats -h; ls; ls './../test'; bats -r './../test'
    - name: On Integration Test Failure report memcheck logs
      if: ${{ failure() && steps.testi.outcome == 'failure' }}
      uses: actions/upload-artifact@v2
      with:
        name: memcheck-logs
        path: ${{runner.workspace}}/build/memchck.log
    - name: Generate Coverage
      if: ${{ always() && steps.collcov.outcome == 'success' }}
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: make ExperimentalCoverage
    - name: Collect tests coverage
      if: ${{ always() && steps.collcov.outcome == 'success' }}
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: lcov --capture --directory ./CMakeFiles/parc24cov.dir --directory ./CMakeFiles/42shcov.dir -o cov-test.info
    - name: Combine to actual coverage
      if: ${{ always() && steps.collcov.outcome == 'success' }}
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: lcov -a cov-base.info -a cov-test.info -o cov.info
    - name: Publish coverage to Coveralls
      if: ${{ always() && steps.collcov.outcome == 'success' }}
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ${{runner.workspace}}/build/cov.info
